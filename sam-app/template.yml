AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Expense tracker SAM app

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  corsOriginParam:
    Type: String
    Default: localhost

Resources:
  apiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: v1

  expenseHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/expense-handler.expenseHandler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: Main lambda handler function
      Role: !GetAtt lambdaExecutionRole.Arn
      AutoPublishAlias: live
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref expenseTrackerTable
          CORS_ORIGIN: !Ref corsOriginParam
      DeploymentPreference:
        Type: AllAtOnce
      Events:
        Options:
          Type: Api
          Properties:
            Path: /transactions
            Method: options
            RestApiId:
              Ref: apiGatewayApi
        GetExpenses:
          Type: Api
          Properties:
            Path: /transactions
            Method: get
            RestApiId:
              Ref: apiGatewayApi
        AddExpense:
          Type: Api
          Properties:
            Path: /transactions
            Method: post
            RestApiId:
              Ref: apiGatewayApi
        DeleteExpense:
          Type: Api
          Properties:
            Path: /transactions/{id}
            Method: delete
            RestApiId:
              Ref: apiGatewayApi

  lambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: logs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:BatchWriteItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: !GetAtt expenseTrackerTable.Arn

  expenseTrackerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH

Outputs:
  GetExpensesApi:
    Description: "GET /transactions"
    Value: !Sub "https://${apiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/v1/transactions"
